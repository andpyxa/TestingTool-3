&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИзменитьУсловияОтборов("СписокПротоколовТестовИсточник",Истина,ПредопределенноеЗначение("Справочник.Проверки.ПустаяСсылка"),Истина,Неопределено);
	ИзменитьУсловияОтборов("СписокПротоколовТестовПриемник",Истина,ПредопределенноеЗначение("Справочник.Проверки.ПустаяСсылка"),Истина,Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Операция) Тогда
		Операция = "ПереносРезультатовТестовМеждуПроверками";
	КонецЕсли;
	Элементы.Операция.СписокВыбора.Добавить("ПереносРезультатовТестовМеждуПроверками","Перенос результатов тестов между проверками");
	ИзменитьУсловияОтборов("СписокПротоколовТестовИсточник",Истина,ПроверкаИсточник,Истина,ТестируемыйКлиентИсточник);
	ИзменитьУсловияОтборов("СписокПротоколовТестовПриемник",Истина,ПроверкаПриемник,Истина,ТестируемыйКлиентПриемник);
КонецПроцедуры


&НаКлиенте
Процедура ПроверкаИсточникПриИзменении(Элемент)
	ИзменитьУсловияОтборов("СписокПротоколовТестовИсточник",Истина,ПроверкаИсточник,Ложь,Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ТестируемыйКлиентИсточникПриИзменении(Элемент)
	ИзменитьУсловияОтборов("СписокПротоколовТестовПриемник",Ложь,Неопределено,Истина,ТестируемыйКлиентИсточник);
КонецПроцедуры


&НаКлиенте
Процедура ПроверкаПриемникПриИзменении(Элемент)
	ИзменитьУсловияОтборов("СписокПротоколовТестовПриемник",Истина,ПроверкаПриемник,Ложь,Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ТестируемыйКлиентПриемникПриИзменении(Элемент)
	ИзменитьУсловияОтборов("СписокПротоколовТестовПриемник",Ложь,Неопределено,Истина,ТестируемыйКлиентПриемник);
КонецПроцедуры

&НаСервере
Процедура ИзменитьУсловияОтборов(ИмяСписка,ИзменятьПроверку,мПроверка,ИзменятьТестируемыйКлиент,мТестируемыйКлиент)
	
	Если ИзменятьПроверку=Истина Тогда
		ЭтаФорма[ИмяСписка].Параметры.УстановитьЗначениеПараметра("Проверка",мПроверка);
	КонецЕсли;
	Если ИзменятьТестируемыйКлиент=Истина Тогда
		ЭтаФорма[ИмяСписка].Параметры.УстановитьЗначениеПараметра("ТестируемыйКлиент",мТестируемыйКлиент);
	КонецЕсли;

КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПеренестиРезультатыТестовНаСервере(мСтруктураИсточник,мСтруктураПриемник,ОчищатьИсточник)
	
	НачатьТранзакцию();
	Попытка
		// получаем и переносим
		// I) ПротоколыВыполненияТестов 
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Т.Проверка КАК Проверка,
		|	Т.ТестируемыйКлиент КАК ТестируемыйКлиент,
		|	Т.Тест КАК Тест,
		|	Т.РезультатВыполнения КАК РезультатВыполнения,
		|	Т.ОписаниеОшибки КАК ОписаниеОшибки,
		|	Т.ДатаВыполенения КАК ДатаВыполенения,
		|	Т.НомерПоПорядку КАК НомерПоПорядку,
		|	Т.КоличествоТестовыхСлучаев КАК КоличествоТестовыхСлучаев,
		|	Т.КоличествоПровалов КАК КоличествоПровалов,
		|	Т.КоличествоОшибок КАК КоличествоОшибок,
		|	Т.КоличествоПропущенных КАК КоличествоПропущенных,
		|	Т.ВремяВыполнения КАК ВремяВыполнения,
		|	Т.СерьезностьДефекта КАК СерьезностьДефекта
		|ИЗ
		|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
		|ГДЕ
		|	Т.Проверка = &Проверка
		|	И Т.ТестируемыйКлиент = &ТестируемыйКлиент
		|	И Т.Тест = &Тест";
		Запрос.УстановитьПараметр("Проверка",мСтруктураИсточник.Проверка);
		Запрос.УстановитьПараметр("ТестируемыйКлиент",мСтруктураИсточник.ТестируемыйКлиент);
		Запрос.УстановитьПараметр("Тест",мСтруктураИсточник.Тест);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Менеджер = РегистрыСведений.ПротоколыВыполненияТестов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Менеджер,Выборка);
			Менеджер.Проверка = мСтруктураПриемник.Проверка;
			Менеджер.ТестируемыйКлиент = мСтруктураПриемник.ТестируемыйКлиент;
			Менеджер.Записать(Истина);
		КонецЦикла;
		
		// II) ПротоколыВыполненияТестовыхСлучаев
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Т.Проверка КАК Проверка,
		|	Т.ТестируемыйКлиент КАК ТестируемыйКлиент,
		|	Т.Тест КАК Тест,
		|	Т.ТестовыйСлучай КАК ТестовыйСлучай,
		|	Т.РезультатВыполнения КАК РезультатВыполнения,
		|	Т.ОписаниеОшибки КАК ОписаниеОшибки,
		|	Т.ДатаВыполенения КАК ДатаВыполенения,
		|	Т.НомерПоПорядку КАК НомерПоПорядку,
		|	Т.КоличествоПровалов КАК КоличествоПровалов,
		|	Т.КоличествоШагов КАК КоличествоШагов,
		|	Т.КоличествоОшибок КАК КоличествоОшибок,
		|	Т.КоличествоПропущенных КАК КоличествоПропущенных,
		|	Т.ВремяВыполнения КАК ВремяВыполнения,
		|	Т.СерьезностьДефекта КАК СерьезностьДефекта,
		|	Т.ЭтоПапка КАК ЭтоПапка,
		|	Т.ЕстьПриложение КАК ЕстьПриложение
		|ИЗ
		|	РегистрСведений.ПротоколыВыполненияТестовыхСлучаев КАК Т
		|ГДЕ
		|	Т.Проверка = &Проверка
		|	И Т.ТестируемыйКлиент = &ТестируемыйКлиент
		|	И Т.Тест = &Тест";
		Запрос.УстановитьПараметр("Проверка",мСтруктураИсточник.Проверка);
		Запрос.УстановитьПараметр("ТестируемыйКлиент",мСтруктураИсточник.ТестируемыйКлиент);
		Запрос.УстановитьПараметр("Тест",мСтруктураИсточник.Тест);
		Выборка = Запрос.Выполнить().Выбрать();
		НаборЗаписей = РегистрыСведений.ПротоколыВыполненияТестовыхСлучаев.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Проверка.Установить(мСтруктураПриемник.Проверка);
		НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураПриемник.ТестируемыйКлиент);
		НаборЗаписей.Отбор.Тест.Установить(мСтруктураПриемник.Тест);
		Пока Выборка.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись,Выборка);
			Запись.Проверка = мСтруктураПриемник.Проверка;
			Запись.ТестируемыйКлиент = мСтруктураПриемник.ТестируемыйКлиент;
		КонецЦикла;
		НаборЗаписей.Записать(Истина);
		
		// III) ПротоколыВыполненияШаговТестов
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Т.Проверка КАК Проверка,
		|	Т.ТестируемыйКлиент КАК ТестируемыйКлиент,
		|	Т.Тест КАК Тест,
		|	Т.ТестовыйСлучай КАК ТестовыйСлучай,
		|	Т.Шаг КАК Шаг,
		|	Т.РезультатВыполнения КАК РезультатВыполнения,
		|	Т.ОписаниеОшибки КАК ОписаниеОшибки,
		|	Т.ВремяВыполнения КАК ВремяВыполнения,
		|	Т.ДатаВыполенения КАК ДатаВыполенения,
		|	Т.ПредставлениеШага КАК ПредставлениеШага,
		|	Т.Ключ КАК Ключ,
		|	Т.КлючРодителя КАК КлючРодителя,
		|	Т.ТипШага КАК ТипШага,
		|	Т.НомерПоПорядку КАК НомерПоПорядку,
		|	Т.НетПодчиненных КАК НетПодчиненных,
		|	Т.ЭтоПапка КАК ЭтоПапка,
		|	Т.ЕстьПриложение КАК ЕстьПриложение,
		|	Т.НомерШага КАК НомерШага
		|ИЗ
		|	РегистрСведений.ПротоколыВыполненияШаговТестов КАК Т
		|ГДЕ
		|	Т.Проверка = &Проверка
		|	И Т.ТестируемыйКлиент = &ТестируемыйКлиент
		|	И Т.Тест = &Тест";
		Запрос.УстановитьПараметр("Проверка",мСтруктураИсточник.Проверка);
		Запрос.УстановитьПараметр("ТестируемыйКлиент",мСтруктураИсточник.ТестируемыйКлиент);
		Запрос.УстановитьПараметр("Тест",мСтруктураИсточник.Тест);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество()>0 Тогда
			НаборЗаписей = РегистрыСведений.ПротоколыВыполненияШаговТестов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураПриемник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураПриемник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураПриемник.Тест);
			Пока Выборка.Следующий() Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись,Выборка);
				Запись.Проверка = мСтруктураПриемник.Проверка;
				Запись.ТестируемыйКлиент = мСтруктураПриемник.ТестируемыйКлиент;
			КонецЦикла;
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
		
		// IV) ПротоколыВыполненияШаговТестов
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Т.Проверка КАК Проверка,
		|	Т.ТестируемыйКлиент КАК ТестируемыйКлиент,
		|	Т.Тест КАК Тест,
		|	Т.ТестовыйСлучай КАК ТестовыйСлучай,
		|	Т.Шаг КАК Шаг,
		|	Т.Номер КАК Номер,
		|	Т.Приложение КАК Приложение,
		|	Т.ТипФайла КАК ТипФайла,
		|	Т.ИмяФайла КАК ИмяФайла,
		|	Т.Размер КАК Размер
		|ИЗ
		|	РегистрСведений.ПриложенияПротоколовВыполненияТестов КАК Т
		|ГДЕ
		|	Т.Проверка = &Проверка
		|	И Т.ТестируемыйКлиент = &ТестируемыйКлиент
		|	И Т.Тест = &Тест";
		Запрос.УстановитьПараметр("Проверка",мСтруктураИсточник.Проверка);
		Запрос.УстановитьПараметр("ТестируемыйКлиент",мСтруктураИсточник.ТестируемыйКлиент);
		Запрос.УстановитьПараметр("Тест",мСтруктураИсточник.Тест);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество()>0 Тогда
			НаборЗаписей = РегистрыСведений.ПриложенияПротоколовВыполненияТестов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураПриемник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураПриемник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураПриемник.Тест);
			Пока Выборка.Следующий() Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись,Выборка);
				Запись.Проверка = мСтруктураПриемник.Проверка;
				Запись.ТестируемыйКлиент = мСтруктураПриемник.ТестируемыйКлиент;
			КонецЦикла;
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
		
		// удаляем, если нужно
		Если ОчищатьИсточник=Истина Тогда
			
			// I) ПротоколыВыполненияТестов
			НаборЗаписей = РегистрыСведений.ПротоколыВыполненияТестов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураИсточник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураИсточник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураИсточник.Тест);			
			НаборЗаписей.Записать(Истина);
			
			// II) ПротоколыВыполненияТестовыхСлучаев
			НаборЗаписей = РегистрыСведений.ПротоколыВыполненияТестовыхСлучаев.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураИсточник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураИсточник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураИсточник.Тест);			
			НаборЗаписей.Записать(Истина);
			
			// III) ПротоколыВыполненияШаговТестов
			НаборЗаписей = РегистрыСведений.ПротоколыВыполненияШаговТестов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураИсточник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураИсточник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураИсточник.Тест);			
			НаборЗаписей.Записать(Истина);
			
			// IV) ПриложенияПротоколовВыполненияТестов
			НаборЗаписей = РегистрыСведений.ПриложенияПротоколовВыполненияТестов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Проверка.Установить(мСтруктураИсточник.Проверка);
			НаборЗаписей.Отбор.ТестируемыйКлиент.Установить(мСтруктураИсточник.ТестируемыйКлиент);
			НаборЗаписей.Отбор.Тест.Установить(мСтруктураИсточник.Тест);			
			НаборЗаписей.Записать(Истина);
			
		КонецЕсли;
		
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры


&НаКлиенте
Процедура ПеренестиРезультатыТестов(Команда)
	
	Если ПроверкаИсточник=ПроверкаПриемник И 
		ТестируемыйКлиентИсточник=ТестируемыйКлиентПриемник Тогда
		Сообщить("Нельзя переносить из приемника в источник с одинаковыми отборами!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТестируемыйКлиентПриемник) Тогда
		Сообщить("Тестируемый клиент приемник должен быть указан!");
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокПротоколовТестовИсточник.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	мСтруктураИсточник = новый Структура("Проверка,ТестируемыйКлиент,Тест",ТекущиеДанные.Проверка,ТекущиеДанные.ТестируемыйКлиент,ТекущиеДанные.Тест);
	мСтруктураПриемник = новый Структура("Проверка,ТестируемыйКлиент,Тест",ПроверкаПриемник,ТестируемыйКлиентПриемник,ТекущиеДанные.Тест);
	ПеренестиРезультатыТестовНаСервере(мСтруктураИсточник,мСтруктураПриемник,ОчищатьИсточник);
КонецПроцедуры
	