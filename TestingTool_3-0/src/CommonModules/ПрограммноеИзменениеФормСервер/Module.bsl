// Программно размещает элемент на форме
// СтруктураЭлемента может содержать параметры:
//  ИмяРодителя - Имя элемента-родителя добавляемого элемента. Если не указан - добавляется на верхний уровень
//  ИмяСледующегоЭлемента - Имя элемента, перед которым мы вставляем новый элемент. Если не указан - добавляется в конец
// Прочие параметры совпадают с именами свойств добавляемого элемента(Видимость, ширина, и т.п.)
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, на которой размещается элемент
//  Имя	- Строка - Уникальное имя элемента формы
//  Тип	- Тип - Тип добавляемого элемента (Поле формы, группа формы, таблица формы и т.п.)
//  СтруктураЭлемента - Структура - Структура, содержащая параметры создаваемого элемента
// 
// Возвращаемое значение:
//  ЭлементФормы - Добавленный элемент
//
Функция ВставитьЭлемент(Форма, Имя, Тип, СтруктураЭлемента) Экспорт
	
	Родитель=Форма;
	ИмяРодителя="";
	Если СтруктураЭлемента.Свойство("ИмяРодителя", ИмяРодителя)	И ЗначениеЗаполнено(ИмяРодителя) Тогда 
		Родитель = Форма.Элементы[ИмяРодителя];
	КонецЕсли;
	
	СледующийЭлемент=Неопределено;
	ИмяСледующегоЭлемента="";
	Если СтруктураЭлемента.Свойство("ИмяСледующегоЭлемента", ИмяСледующегоЭлемента)
		И ЗначениеЗаполнено(ИмяСледующегоЭлемента) Тогда 
		СледующийЭлемент=Форма.Элементы[ИмяСледующегоЭлемента];
	КонецЕсли;
	
	Элемент=Форма.Элементы.Вставить(Имя, Тип, Родитель, СледующийЭлемент);
	
	ЗаполнитьЗначенияСвойств(Элемент,СтруктураЭлемента);
	
	Возврат Элемент;
	
КонецФункции

// Программно удаляет элемент с формы, не может удалять элементы добавленные конструктором через конфигуратор
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, на которой размещается элемент
//  Имя	- Строка - Уникальное имя элемента формы
// 
Процедура УдалитьЭлемент(Форма, Имя) Экспорт
	
	Элемент = Форма.Элементы.Найти(Имя);
	Если НЕ Элемент=Неопределено Тогда
		Форма.Элементы.Удалить(Элемент);
	КонецЕсли;
	
КонецПроцедуры

// Программно размещает элемент на форме
// СтруктураЭлемента может содержать параметры:
//  ИмяРодителя - Имя элемента-родителя добавляемого элемента. Если не указан - добавляется на верхний уровень
//  ИмяСледующегоЭлемента - Имя элемента, перед которым мы вставляем новый элемент. Если не указан - добавляется в конец
// Прочие параметры совпадают с именами свойств добавляемого элемента(Видимость, ширина, и т.п.)
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, на которой размещается элемент
//  Имя	- Строка - Уникальное имя элемента формы
//  Тип	- Тип - Тип добавляемого элемента (Поле формы, группа формы, таблица формы и т.п.)
//  СтруктураЭлемента - Структура - Структура, содержащая параметры создаваемого элемента
// 
// Возвращаемое значение:
//  ЭлементФормы - Добавленный элемент
//
Функция ВставитьЭлементДинамическогоСписка(Форма, Имя, Тип, Знач СтруктураЭлемента) Экспорт 
	
	ПолныйПутьКДаннымПоля = Неопределено;
	Если СтруктураЭлемента.Свойство("ПутьКДанным", ПолныйПутьКДаннымПоля) И ЗначениеЗаполнено(ПолныйПутьКДаннымПоля) Тогда
		МассивИменЭлементов = СтрРазделить(ПолныйПутьКДаннымПоля, ".", Ложь);
		Если МассивИменЭлементов.Количество()>1 Тогда
			ДинамическийСписок = Форма[МассивИменЭлементов[0]];
			Если ТипЗнч(ДинамическийСписок)=Тип("ДинамическийСписок") Тогда //на всякий случай чтобы при опиське не было ошибки
				ПутьКДаннымПоля = Сред(ПолныйПутьКДаннымПоля, СтрДлина(МассивИменЭлементов[0])+2);
				Если ДинамическийСписок.КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.НайтиПоле(Новый ПолеКомпоновкиДанных(ПутьКДаннымПоля))=Неопределено Тогда
					//если поле в списке недоступно, то не будем заполнять реквизит "ПутьКДанным"
					СтруктураЭлемента.Удалить("ПутьКДанным");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВставитьЭлемент(Форма, Имя, Тип, СтруктураЭлемента);
	
КонецФункции

// Программно првоеряет наличие реквизиты
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, на которой размещается элемент
//  Имя	- Строка - Уникальное имя элемента формы
// 
// Возвращаемое значение:
//  РеквизитНайден - Найден или нет реквизит (Истина, Ложь)
//
Функция ЕстьРеквизит(Форма, Имя) Экспорт
	
	РеквизитНайден=Ложь;
	
	МассивРеквизитов=Форма.ПолучитьРеквизиты();
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если Реквизит.Имя=Имя Тогда
			РеквизитНайден=Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеквизитНайден;
	
КонецФункции
