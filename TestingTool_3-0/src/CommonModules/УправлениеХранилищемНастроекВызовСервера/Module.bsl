#Область СохранениеЗагрузкаНастроек

Процедура СохранитьНастройкиПользователя(Знач КлючОбъекта, Знач КлючНастроек,Знач Настройки, Знач Пользователь="") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Настройки)=Тип("ХранилищеЗначения") ИЛИ Настройки=Неопределено Тогда
	Иначе
		Настройки = Новый ХранилищеЗначения(Настройки);
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ОбщееХранениеНастроек.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.КлючНастроек = КлючНастроек;
	МенеджерЗаписи.КлючОбъекта = КлючОбъекта;
	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.Настройки = Настройки;
	МенеджерЗаписи.ДатаАктуальности = ТекущаяДата();
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция ЗагрузитьНастройкиПользователя(Знач КлючОбъекта, Знач КлючНастроек, Знач Пользователь="", СрокЖизниКэша = 86400, КэшУстарел=Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗначениеНастройки = Неопределено;
	
	КлючОбъекта = Строка(КлючОбъекта);
	КлючНастроек = Строка(КлючНастроек);
	Пользователь = Строка(Пользователь);
	
	Запрос = новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ОбщееХранениеНастроек.КлючОбъекта КАК КлючОбъекта,
	              |	ОбщееХранениеНастроек.КлючНастроек КАК КлючНастроек,
	              |	ОбщееХранениеНастроек.Пользователь КАК Пользователь,
	              |	ОбщееХранениеНастроек.Настройки КАК Настройки,
	              |	ОбщееХранениеНастроек.ДатаАктуальности КАК ДатаАктуальности
	              |ИЗ
	              |	РегистрСведений.ОбщееХранениеНастроек КАК ОбщееХранениеНастроек
	              |ГДЕ
	              |	ОбщееХранениеНастроек.КлючОбъекта = &КлючОбъекта
	              |	И ОбщееХранениеНастроек.КлючНастроек = &КлючНастроек
	              |	И ОбщееХранениеНастроек.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("КлючОбъекта",КлючОбъекта);
	Запрос.УстановитьПараметр("КлючНастроек",КлючНастроек);
	Запрос.УстановитьПараметр("Пользователь",Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ЗначениеНастройки = Выборка.Настройки;
			ДатаАктуальности = Выборка.ДатаАктуальности;
			
			// пока смотрим сутки
			Если ТекущаяДата() > ДатаАктуальности + СрокЖизниКэша  Тогда
				КэшУстарел = Истина;	
			КонецЕсли;
			
			Если ТипЗнч(ЗначениеНастройки)<>Тип("ХранилищеЗначения") ИЛИ ЗначениеНастройки=Неопределено Тогда
			Иначе
				ЗначениеНастройки = ЗначениеНастройки.Получить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеНастройки;
КонецФункции

Процедура УдалитьНастройкиПользователя(Знач КлючОбъекта, Знач КлючНастроек, Знач Пользователь="") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.ОбщееХранениеНастроек.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.КлючОбъекта = КлючОбъекта;
	МенеджерЗаписи.КлючНастроек = КлючНастроек;
	МенеджерЗаписи.Пользователь = Пользователь;
	
	МенеджерЗаписи.Удалить();
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСБЕзопаснымХранилищем

// Помещает настройки в безопасное хранилище
Процедура ЗаписатьДанныеВБезопасноеХранилище(Знач Владелец,Знач Данные, Знач Ключ = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Данные)=Тип("ХранилищеЗначения") ИЛИ Данные=Неопределено Тогда
	Иначе
		Данные = Новый ХранилищеЗначения(Данные);
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.БезопасноеХранилищеДанных.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Владелец 	= Владелец;
	МенеджерЗаписи.Ключ 		= Ключ;
	МенеджерЗаписи.Данные	 	= Данные;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Помещает настройки в безопасное хранилище
Процедура ЗаписатьДанныеВБезопасноеХранилищеРасширенный(Знач Владелец, Знач Данные, Знач Комментарий="", Знач Ключ = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Данные)=Тип("ХранилищеЗначения") ИЛИ Данные=Неопределено Тогда
	Иначе
		Данные = Новый ХранилищеЗначения(Данные);
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.БезопасноеХранилищеДанных.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Владелец 	= Владелец;
	МенеджерЗаписи.Ключ 		= Ключ;
	МенеджерЗаписи.Данные 		= Данные;
	МенеджерЗаписи.Комментарий 	= Комментарий;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Получает данные из безопасного хранилища
Функция ДанныеИзБезопасногоХранилища(Знач Владелец,Знач Ключ = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БезопасноеХранилищеДанных.Данные КАК Данные
	|ИЗ
	|	РегистрСведений.БезопасноеХранилищеДанных КАК БезопасноеХранилищеДанных
	|ГДЕ
	|	БезопасноеХранилищеДанных.Владелец = &Владелец
	|	И БезопасноеХранилищеДанных.Ключ = &Ключ";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("Ключ", Ключ);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Если ЗначениеЗаполнено(РезультатЗапроса.Данные) Тогда
			Результат = РезультатЗапроса.Данные.Получить();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Удаляет конфиденциальные данные в безопасное хранилище.
Процедура УдалитьДанныеИзБезопасногоХранилища(Знач Владелец,Знач Ключ = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	БезопасноеХранилищеДанных = РегистрыСведений.БезопасноеХранилищеДанных.СоздатьМенеджерЗаписи();
	
	БезопасноеХранилищеДанных.Владелец = Владелец;
	БезопасноеХранилищеДанных.Ключ = Ключ;
	
	БезопасноеХранилищеДанных.Удалить();
	
КонецПроцедуры


#КонецОбласти